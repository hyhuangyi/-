 /dev/null   null是一个名叫null小桶的东西，如果命令的输出不想要即想丢弃输出的内容，既不想在标准输出与不想重定向到某个文件，就可将命令的输出重定向到/dev/null。这样做的好处是不会因为输出的内容过多而导致文件大小不断的增加。


> 代表重定向到哪里，例如：echo "123" > /home/123.txt 
1 表示stdout标准输出，系统默认值是1，所以">/dev/null"等同于"1>/dev/null" 
2 表示stderr标准错误 
& 表示等同于的意思，2>&1，表示2的输出重定向等同于1 


>/dev/null 标准输出丢弃，错误输出到屏幕    

>/dev/null 2>&1 标准和错误信息都丢弃  1表示标准输出，2表示标准错误输出，2>&1表示将标准错误输出重定向到标准输出。//1>/dev/null 2>&1

2>&1 >/dev/null 错误输出到屏幕，标准输出丢弃  //解释顺序从左到右依次进行

&>/dev/null 不管你是啥玩意儿文件描述符，通通重定向到/dev/null





---------------------------------------------------------------------------------------------------------------------------------------------------------------------

有选的择性执行命令  

&&   就是用来实现选择性执行的，它表示如果前面的命令执行结果（不是表示终端输出的内容，而是表示命令执行状态的结果）返回0则执行后面的，否则不执行



||   与&&相反的控制效果，当上一条命令执行结果为≠0($?≠0)时则执行它后面的命令

--------------------------------------------------------------------------------------------------------------------------------------------------------------------
 
cut 命令，打印每一行的某一字段
 
 cut /etc/passwd -d ':' -f 1,6   打印/etc/passwd文件中以:为分隔符的第1个字段和第6个字段分别表示用户名和其家目录    

   -d  使用指定分界符代替制表符作为区域分界   -f 只选中指定的这些域，并打印所以不包含分界赋的行   -s 不打印没有包含分界符的行

 cut /etc/passwd -c -5  前5个    -c只选中指定的这些字符    //前5 -5 // 后5  5-  //第五  5  // 选择2-5  2-5



---------------------------------------------------------------------------------------------------------------------------------------------------------------------

wc 命令，简单小巧的计数工具

wc -l /etc/passwd  行数

wc -w /etc/passwd  单词数

wc -c /etc/passwd  字节数

wc -m /etc/passwd  字符数

----------------------------------------------------------------------------------------------------------------------------------------------------------------------- grep 命令，在文本中或 stdin 中查找匹配字符串



export | grep hy



-----------------------------------------------------------------------------------------------------------------------------------------------------------------------
sort 排序命令 

 默认为字典排序  -n按照数字排序  -t指定字段的分隔符  -k 字段号用于指定对哪一个字段进行排序
 
 cat /etc/passwd | sort -t':' -k 3 -n 


-----------------------------------------------------------------------------------------------------------------------------------------------------------------------

EOF是END Of File的缩写,表示自定义终止符.既然自定义,那么EOF就不是固定的,可以随意设置别名.  EOF一般会配合cat能够多行文本输出.

其用法如下:
<<EOF        //开始
....
EOF            //结束

还可以自定义，比如自定义：
<<BBB        //开始
....
BBB              //结束

向hy.sh输入内容
cat<<EOF>>hy.sh

可以编写脚本向一个文件输入多行内容 









